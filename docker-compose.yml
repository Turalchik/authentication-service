version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: [ "redis-server", "--save", "", "--appendonly", "yes" ]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  migrate:
    image: migrate/migrate
    depends_on:
      - db
    volumes:
      - ./internal/migrations:/migrations
    entrypoint: ["migrate", "-path", "/migrations", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable", "up"]

  api:
    build: .
    depends_on:
      - db
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      REDIS_ADDR: ${REDIS_ADDR}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      TTL_ACCESS_TOKEN: ${TTL_ACCESS_TOKEN}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      WEBHOOK_URL: ${WEBHOOK_URL}
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  pgdata:
  redisdata: